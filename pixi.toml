[project]
name = "ochub-ingest"
version = "0.1.0"
description = "Repo for learning rust"
authors = ["Don", "Adrian", "Scarlett"]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

[tasks]
# We can build a project using cargo build
build = "cargo build"
# We can build and run a project in one step using cargo run
start = "cargo run"
test = "cargo test"
clean = "cargo clean"
fmt = "cargo fmt"
lint = { cmd = "cargo clippy", depends-on = ["fmt"] }
# We can build a project without producing a binary to check for errors using cargo check
check = "cargo check"
# Create an executable in target/release instead of target/debug,
# it will compile with optimizations
# This is why there are two different profiles: one for development,
# when you want to rebuild quickly and often,
# and another for building the final program 
# and will run as fast as possible.
# **If you’re benchmarking your code’s running time, be sure to run this build**
build-release = "cargo build --release"
start-release = "cargo run --release"
open-doc = "cargo doc --open"

[dependencies]
rust = ">=1.79.0,<1.80"
openssl = ">=3.3.1,<3.4"
pkg-config = ">=0.29.2,<0.30"
compilers = ">=1.7.0,<1.8"
